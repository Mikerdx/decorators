# GROUP 4 DECORATORS PRESENTATION
## DECORATORS IN PYTHON
A decorator is a function that modifies or enhances another function without changing its code directly.It makes repo more beautiful and easier to read.
It is a command in python that starts whith @ symbol and are used before functions ,classes or methods.

### WHY USE IT 
Easy to reuse 
Keeps the code clean 
Easy to maintain

#### ARGUEMENT BASE 
What if our original function takes arguments?
We just pass them along inside the wrapper!

## Types of decorators
1 Function decorators - takes a function as input and returns a new function 
2 Method decorators -used to decorate a method within a class
3 Class decorators -modifies behaviour of a class
   
**Python has also inbuilt decorators like**
@staticmethod
@classmethod
@property
## Chaining decorators
This means decorating a function with multiple decorators

#### wrapper functions
Wrapper is a nested function inside the decorator.It wraps the original function,adding additional functionality
*args:This collects any positional arguements passed to the decorated function into a tuple (Tuple = ordered, immutable list)
**kwargs:This collects any keyword arguements passed to the decorated function into a dictionary( collection of key-value pairs)

Thank you for your time @Group 4